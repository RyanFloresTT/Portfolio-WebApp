@inherits LayoutComponentBase
@using PortfolioBlazor.Components.MyComponents

<MudThemeProvider Theme="MyCustomTheme" />
<MudLayout>
    <MudAppBar Elevation="0" Style="@($"background:{MyCustomTheme.Palette.Primary};")">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => ToggleLeftDrawer())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" OnClick="@((e) => ToggleRightDrawer())" />
    </MudAppBar>
    <MudDrawer @bind-Open="_leftDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="0" Style="@($"background:{MyCustomTheme.Palette.Primary};")" Width="100%">
        <NavMenu />
    </MudDrawer>
    <MudDrawer Variant="@DrawerVariant.Temporary" Anchor="Anchor.End" @bind-Open="_rightDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Style="@($"background:{MyCustomTheme.Palette.Primary};")" Width="100%">
        <SocialMediaDrawerContent />
    </MudDrawer>
    <MudMainContent>
        <CascadingValue Value="@MyCustomTheme">
            <div class="body-container">
                @Body
            </div>
        </CascadingValue>
    </MudMainContent>
</MudLayout>

@code {
    bool _leftDrawerOpen = false;
    bool _rightDrawerOpen = false;
    private bool _isDarkMode;

    void ToggleLeftDrawer()
    {
        _leftDrawerOpen = !_leftDrawerOpen;
    }

    void ToggleRightDrawer()
    {
        _rightDrawerOpen = !_rightDrawerOpen;
    }
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = new MudColor("#2F243A"),
                Secondary = new MudColor("#444054"),
                Tertiary = new MudColor("#9984D4"),
                TextPrimary = new MudColor("#EEF4D4")
            }
        };
}